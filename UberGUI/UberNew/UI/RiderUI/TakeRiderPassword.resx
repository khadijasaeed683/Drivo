<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAA/VJREFUeF7t3c2LHEUYx/E2G5B4ifGgWZyup6q68wJBg8ega0RRL0Ei4tGD4iEx
        5BAIZM/ehIB69yBCTt71DxBBo0clNw8KvkS8GI0g7OrTO0/etmuz3TOZ3snU9wMPYXfrIUX9nukedjed
        AgAAAAAAAAAAAAAAAAAAALhv1Y/Xo0rkvej855Xzl4ILJ+xLO05EfOX9y/rnYf3wgfFncc9o8Mcq8X9o
        /XdnyQe2ZEdo4A83w6h7Wb+xpyj+ywPORVuCaUXnno5O/rwV+p1Ve/+SLR1UjHFv5eTr1J50KK6MRqM9
        thST2i78pvQV95EtH4xzbp9efb5J7edmOf+GLcckuoTfVBT51FoG0Sl8LX2vctFa0Fcs4zNdwm9KB2DV
        2maua/gb5fx5a0MfPcP/Se+1j1jrTI3f8G1xz2/Xde+9WCu66hn+73EUn7DWmRq/8v23m/ewRa3r3k5Z
        K7rqes9vStddDSE8aa0ztfHKF7mc2kei1vXSf9Za0RXhZ4zwM0b4GSP8jBF+xgg/Y4SfMcLPGOFnjPAz
        1ut7+4S/WOY8/G4/0iX8yRB+xgg/Y4SfsY3wRa4lDrRVhL9gCD9jfcMf6te4CH8A8xp+r9/eJfzJEH7G
        CD9jhJ+xUIYVws/UfIff/R9tEP4ECD9jhJ8xws8Y4WeM8DNG+Bkj/IwRfsbqsqzmMXy1qxL5IrWPRGn4
        7oz1oY/KyceJA23VwOEXVelfSe0jUYQ/ja4PPwrOvWYtg4jOX0jto1XOX7IWTEIv/58kD7ZdP8v4ebiD
        0Mv/ycQeUrUWRN6yNvTlvT+kh3h906FuVUMOwZLedr5K7CFVDME0mqdd66X0n8TBtsvJr1VZHrHWmQoh
        PBbFf5fcR7uaR7Sdtlb0xRCAIQBDAMUQgCFAUTT/IwdDkDmGAAwBGAIohgAMAWwIuv4AiSFYTAwBGAIw
        BFChDC/qIXYdgt8YggXEEIAhAEMANa9DEGN8lCEYCEMAhgBFccD7Z/Ww/0ocbLsYgsXEEIAhAEMAxRCA
        IcCNIej2ZBKGYEExBGAIoIft3At6iH9vOtR0Of9LCOGgtc6UiOzXv+9Kch/tWtMheNNa0VefIdBX5vfH
        i2K3tc5UnyGITv6tRZ6yVvTVZwhCGVasbeZ6XQmcf9/aMAkdguf1ILcfAhfetpZBdB4C5z+zFkyqeXVv
        /8ZQnrPlg+n2xlA+tOWYxt2uBBrCD3VdP2hLB7XNlWBNB+CYLcW0au+PN08ovf2Q9eMfvfdHbcmO2BgC
        kcub9tW8AXzHluBe0cvu3tqF1/WWsKr16vLy8kP2pZ22NH6YpbyrwZ876FywzwMAAAAAAAAAAAAAAAAA
        AABbKYr/AUUnTsGG4NmjAAAAAElFTkSuQmCC
</value>
  </data>
</root>